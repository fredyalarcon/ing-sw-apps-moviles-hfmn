name: Create Github Release

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      BUMP_STRATEGY:
        description: "Bump strategy (major, minor, patch)"
        required: true

jobs:
  build-and-release:
    name: Build and Create Github Release with APKs
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set JDK environment
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Decode Keystore & Setup local.properties
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE }}
        run: |
          TMP_KEYSTORE_FILE_PATH="${RUNNER_TEMP}"/keystore
          mkdir "${TMP_KEYSTORE_FILE_PATH}"
          echo $ENCODED_STRING | base64 -di > "${TMP_KEYSTORE_FILE_PATH}"/app.jks
          echo "RELEASE_STORE_FILE=${TMP_KEYSTORE_FILE_PATH}/app.jks" >> local.properties
          echo "RELEASE_STORE_PASSWORD=${{ secrets.SIGNING_STORE_PASSWORD }}" >> local.properties
          echo "RELEASE_KEY_ALIAS=${{ secrets.SIGNING_KEY_ALIAS }}" >> local.properties
          echo "RELEASE_KEY_PASSWORD=${{ secrets.SIGNING_KEY_PASSWORD }}" >> local.properties

      - name: Build with Gradle
        run: ./gradlew assembleRelease && ./gradlew assembleDebug

      - name: Resolve bump strategy
        id: bump_strategy
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            ## Validate input
            if [[ "${{ github.event.inputs.BUMP_STRATEGY }}" != "major" && "${{ github.event.inputs.BUMP_STRATEGY }}" != "minor" && "${{ github.event.inputs.BUMP_STRATEGY }}" != "patch" ]]; then
              echo "Invalid bump strategy '${{ github.event.inputs.BUMP_STRATEGY }}'."
              exit 1
            fi
            # echo "{name}={value}" >> $GITHUB_OUTPUT
            echo "strategy=${{ github.event.inputs.BUMP_STRATEGY }}" >> $GITHUB_OUTPUT
          else
            if [[ "${{ github.event.head_commit.message }}" == *"[MAJOR]"* ]]; then
              echo "strategy=major" >> $GITHUB_OUTPUT
            elif [[ "${{ github.event.head_commit.message }}" == *"[MINOR]"* ]]; then
              echo "strategy=minor" >> $GITHUB_OUTPUT
            else
              echo "strategy=patch" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Get latest tag
        id: get_latest_tag
        run: echo "tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          default_bump: ${{ steps.bump_strategy.outputs.strategy }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main

      - name: Build Changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v3
        with:
          fromTag: ${{ steps.get_latest_tag.outputs.tag }}
          toTag: ${{ steps.tag_version.outputs.new_tag }}
          configurationJson: |
            {
              "template": "#{{CHANGELOG}}\n\n<details>\n<summary>Uncategorized</summary>\n\n#{{UNCATEGORIZED}}\n</details>",
              "categories": [
                {
                  "title": "## 🚀 Features",
                  "labels": ["feature"]
                },
                {
                  "title": "## 🐞 BugFixes",
                  "labels": ["bugfix"]
                },
                {
                  "title": "## 🔨 Refactors",
                  "labels": ["refactor"]
                },
                {
                  "title": "## 💬 Other",
                  "labels": ["other"]
                }
              ]
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Rename APK
        id: rename_apk
        run: |
          mv app/build/outputs/apk/debug/app-debug.apk app/build/outputs/apk/debug/Vinilos_App_Debug-${{ steps.tag_version.outputs.new_tag }}.apk
          mv app/build/outputs/apk/release/app-release.apk app/build/outputs/apk/release/Vinilos_App-${{ steps.tag_version.outputs.new_tag }}.apk
          echo "apk_debug=app/build/outputs/apk/debug/Vinilos_App_Debug-${{ steps.tag_version.outputs.new_tag }}.apk" >> $GITHUB_OUTPUT
          echo "apk_release=app/build/outputs/apk/release/Vinilos_App-${{ steps.tag_version.outputs.new_tag }}.apk" >> $GITHUB_OUTPUT

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.build_changelog.outputs.changelog }}
          artifacts: |
            ${{ steps.rename_apk.outputs.apk_debug }},${{ steps.rename_apk.outputs.apk_release }}
          artifactContentType: application/vnd.android.package-archive